@using IssueTracker_CoreServices.Models
@model IssueTracker_CoreServices.Models.DTO.IssueDto

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Issue</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="New">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ProjectId" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group mt-2">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group mt-2">
                <label asp-for="Severity" class="control-label">Status:</label>
                @Html.RadioButtonFor(i => i.Severity, Severity.Critical, new {@class = "form-check-input"}) @Html.Label("Critical")
                @Html.RadioButtonFor(i => i.Severity, Severity.Major, new {@class = "form-check-input"} ) @Html.Label("Major")
                @Html.RadioButtonFor(i => i.Severity, Severity.Minor, new {@class = "form-check-input"}) @Html.Label("Minor")
                <span asp-validation-for="Severity" class="text-danger"></span>
            </div>
            <div class="form-group mt-2">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
